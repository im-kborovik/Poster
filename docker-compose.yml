services:
  posts-database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    restart: always
    ports:
      - 1433:1433
    environment:
      SA_PASSWORD: abcDEF123!
      ACCEPT_EULA: Y
    healthcheck:
      test: [ "CMD-SHELL", "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -C -P abcDEF123! -Q 'SELECT 1' || exit 1" ]
      interval: 10s
      retries: 10
      start_period: 10s
      timeout: 3s
          
  posts:
    image: posts
    ports:
      - 5000:5000
    environment:
      ASPNETCORE_URLS: http://+:5000
      WEBSITES_PORT: 5000
      ConnectionStrings__Default: Server=posts-database,1433;Database=Posts;User Id=sa;Password=abcDEF123!;TrustServerCertificate=True;Integrated Security=True;Trusted_Connection=False;
    build:
      context: ./Posts
      dockerfile: Posts.API/Dockerfile
    depends_on:
      posts-database:
        condition: service_healthy
  
  posts-migrator:
    image: posts-migrator
    ports:
      - 5001:5001
    environment:
      ASPNETCORE_URLS: http://+:5001
      WEBSITES_PORT: 5001
      ConnectionStrings__Default: Server=posts-database,1433;Database=Posts;User Id=sa;Password=abcDEF123!;TrustServerCertificate=True;Integrated Security=True;Trusted_Connection=False;
    build:
      context: ./Posts
      dockerfile: Posts.Migrator/Dockerfile
    depends_on:
      posts-database:
        condition: service_healthy
        
  posts-message-broker-server:
    image: zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    
  posts-message-broker:
    image: apache/kafka:latest
    ports:
      - 9092:9092
    environment:
      